str(manuChoices[1,2])
str(as.character(manuChoices[1,2]))
strsplit(as.character(manuChoices[1,2]), "e")
strsplit(as.character(manuChoices[1,2]), "(")
strsplit(as.character(manuChoices[1,2]), "[(]")
strsplit(as.character(manuChoices[1,2]), "[ (]")
strsplit(as.character(manuChoices[1,2]), "[ (]")[1]
strsplit(as.character(manuChoices[1,2]), "[ (]")[1][1]
strsplit(as.character(manuChoices[1,2]), "[ (]")[[1]]
str(strsplit(as.character(manuChoices[1,2]), "[ (]"))
str(strsplit(as.character(manuChoices[1,2]), "[ (]")[1])
str(strsplit(as.character(manuChoices[1,2]), "[ (]")[1][1])
str(strsplit(as.character(manuChoices[1,2]), "[ (]")[[1]])
str(strsplit(as.character(manuChoices[1,2]), "[ (]")[[1,1]])
strsplit(manuChoices[1,2], "e")
strsplit(as.character(manuChoices[1,2]), "[ (]")
z <- strsplit(as.character(manuChoices[1,2]), "[ (]")
str(z)
z[1]
z[[1]]
z[[1]][1]
strsplit(as.character(manuChoices[1,2]), "[ (]")[[1]][1]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
WF_Map[WF_Map$project_name == "Lac Alfred",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.2))
runApp()
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5, color = ~year))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5, color = ~commissioning_date))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers', color = ~commissioning_date,
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers', color = ~project_name,
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Gender Gap in Earnings per University',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotoer and Hub Geight', xaxis = list(showgrid = FALSE), yaxis = list(showgrid = FALSE))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotoer and Hub Geight', xaxis = list(showgrid = FALSE), yaxis = list(showgrid = FALSE, title ="hi"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotoer and Hub Geight', xaxis = list(showgrid = FALSE), yaxis = list(showgrid = FALSE, title ="Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotoer and Hub Geight', xaxis = list(showgrid = FALSE, title="Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title ="Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',size = ~turbine_rated_capacity_k_w*.01,
marker = list(opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotoer and Hub Geight', xaxis = list(showgrid = FALSE, title="Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title ="Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly(x = ~rotor_diameter_m, y = ~hub_height_m, text = ~project_name, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotoer and Hub Geight', xaxis = list(showgrid = FALSE), yaxis = list(showgrid = FALSE, title ="Hub Height (m)"))
plot_ly(WF_Map, x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',
xaxis = list(showgrid = FALSE),
yaxis = list(showgrid = FALSE))
plot_ly(WF_Map, x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
WF_Map %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5,color = 'rgb(255, 65, 54)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5,color = 'rgb(144, 238, 144)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5,color = 'rgb(0, 255, 0)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.5,color = 'rgb(0, 192, 0)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.05,color = 'rgb(0, 192, 0)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE),yaxis = list(showgrid = FALSE))
fig
fig <- WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.05,color = 'rgb(0, 192, 0)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"),yaxis = list(showgrid = FALSE, text = "Hub Height (m)"))
fig
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.05,color = 'rgb(0, 192, 0)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"),yaxis = list(showgrid = FALSE, text = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.05,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"),yaxis = list(showgrid = FALSE, text = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.1, opacity = 0.05,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"),yaxis = list(showgrid = FALSE, text = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.1,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"),yaxis = list(showgrid = FALSE, text = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.1,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, text = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.1,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title() = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.1,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, titl = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.1,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, text = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",] %>% plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers',
marker = list(size = ~turbine_rated_capacity_k_w*.01, opacity = 0.1,color = 'rgb(80, 208, 255)'))%>% layout(title = 'Turbine Capacity by Rotor Size and Hub Height',xaxis = list(showgrid = FALSE, title = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title = "Hub Height (m)"))
runApp()
runApp()
runApp()
?selectInput
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
WF_Map[WF_Map$manufacturer == "Bonus",]
runApp()
runApp()
runApp()
runApp()
runApp()
WF_Map[WF_Map$manufacturer == "GE",]
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~project_name, y = ~n, type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~project_name, y = ~reorder(project_name, n), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~project_name, y = ~reorder(n, project_name), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~project_name, y = ~n, type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~project_name, type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~~reorder(project_name, n), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~~reorder(project_name, -n), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, -n), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(xaxis = ax)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(0.2, 1)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(0.2, 3)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(0.2, 10)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(0.2, 1)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(0.2, 100)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(autorange = TRUE)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
domain = list(0, 147.3)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
ax <- list(
range = list(0, 147.3)
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(automargin = TRUE)
ax <- list(
automargin = TRUE
)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = ax)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(margin = list(b = 70))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(margin = list(b = 170))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(range = list(0, 147.3))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(list(range = list(0, 100)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(list(range = list(1, 100)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(list(range = list(1, 500)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(list(automargin=TRUE, range = list(1, 500)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(list(automargin=TRUE))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis = list(color="red"))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis = list(color="red"))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis = list(autorange = TRUE))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis = list(domain = list(0,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis = list(domain = list(0,100)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis = list(domain = list(0,5)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(domain = list(0,5))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(domain = list(0,100))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(width = 100)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(autosize = TRUE
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(autosize = TRUE)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(color="red"))
?yaxis
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(layer="above traces"))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(layer="below traces"))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(.5,80)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(1,80)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(0,80)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(0,.80)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(0,8.0)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(0,800.0)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(domain=list(.2,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.2,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.25,.75)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.001,.75)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.75,.75)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.75,.0001)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.5,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(1,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.9,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.75,1)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
str(WF_Map)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar', name = 'SF Zoo')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar')%>% add_trace(y = ~model, name = 'LA Zoo')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar')%>% add_trace(y = ~model)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar')%>% add_trace(y = ~model)%>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>%
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% spread(model, commissioning_date)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% spread(model)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% spread(model)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% spread(model, n)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar')%>% add_trace(y = ~model)%>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
?add-trace
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar')%>% add_trace(y = ~model)%>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% spread(model, n)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar', color=~model)%>% layout(yaxis = list(title = 'Count'), barmode = 'stack')
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(commissioning_date, model) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~commissioning_date, y = ~n, type = 'bar', color=~model)%>% layout(xaxis = list(title = 'Year'), yaxis = list(title = 'Turbine Count'), barmode = 'stack')
runApp()
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(xaxis=list(title="",domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(title=""), xaxis=list(title="",domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>% layout(yaxis=list(title=""), xaxis=list(title="Count",domain=list(.75,1)))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(10)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n, 10)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(10,n)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(10)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10)
runApp()
runApp()
runApp()
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n)), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(text = ~n), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n, xanchor="right"), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n, xanchor="right", yanchor="center"), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n, yanchor="right", xanchor="center"), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n, yanchor="left", xanchor="center"), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n, xanchor="left", yanchor="center"), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
WF_Map[WF_Map$manufacturer == "GE",]%>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n)) %>% slice_head(n=10) %>%
plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h') %>%
layout(annotations = list(x = ~n, y=~reorder(project_name, n), text=~n, xanchor="left", yanchor="center", showarrow=FALSE), font = list(family = "verdana"), yaxis=list(title = ""), xaxis=list(showline = FALSE, showticklabels = FALSE, showgrid = FALSE,title = "", domain=list(.75,1)))
runApp()
runApp()
runApp()
WF_Map
str(WF_Map)
runApp()
runApp()
runApp()
install.packages("shinyWidgets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?titlePanel
runApp()
runApp()
runApp()
runApp()
runApp()
WF_Map[WF_Map$manufacturer == "GE",]%>% %>%
plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers', marker = list(size = ~turbine_rated_capacity_k_w*.02, opacity = 0.2,color = 'rgb(80, 208, 255)'))%>%
layout(plot_bgcolor='transparent',paper_bgcolor='transparent', font = list(family = "verdana"), xaxis = list(showgrid = FALSE, title = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title = "Hub Height (m)"))
WF_Map[WF_Map$manufacturer == "GE",]%>%
plot_ly( x = ~rotor_diameter_m, y = ~hub_height_m, text = ~manufacturer, type = 'scatter', mode = 'markers', marker = list(size = ~turbine_rated_capacity_k_w*.02, opacity = 0.2,color = 'rgb(80, 208, 255)'))%>%
layout(plot_bgcolor='transparent',paper_bgcolor='transparent', font = list(family = "verdana"), xaxis = list(showgrid = FALSE, title = "Rotor Diameter (m)"), yaxis = list(showgrid = FALSE, title = "Hub Height (m)"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
WF_Map$year
WF_Map$commissioning_date
WF_Map[881,]$commissioning_date
strsplit(WF_Map[881,]$commissioning_date, "[/]")[[1]][1]
strsplit(WF_Map[881,]$commissioning_date, "[/]")[[1]][2]
strsplit(WF_Map[881,]$commissioning_date, "[/]")[[1]][3]
strsplit(WF_Map[881,]$commissioning_date, "[/]")[[1]][2]
strsplit(WF_Map[993,]$commissioning_date, "[/]")[[1]][2]
strsplit(WF_Map[993,]$commissioning_date, "[/]")[[1]][1]
WF_Map[881,]$commissioning_date
WF_Map[grep("[/"),]$commissioning_date
WF_Map[grep("[/", WF_Map$commissioning_date),]$commissioning_date
WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date, "[/]")[[1]][1]
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date, "[/]")
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date, "[/]")[2]
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date, "[/]")[[2]]
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date, "[/]")[[1]][1]
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date, "[/]")[[1]][1]
strsplit(WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date
WF_Map[grep("[/]", WF_Map$commissioning_date),]$commissioning_date
WF_Map[grep("[/....]", WF_Map$commissioning_date),]$commissioning_date
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ "aha", TRUE ~ commissioning_date)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ "aha", TRUE ~ commissioning_date))
head(WF_Map)
head(WF_Map$year)
table(WF_Map$year)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/....]"), TRUE ~ commissioning_date))
table(WF_Map$year)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "(.)[/....]"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "(.)[/]"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "(.)[/](.)"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/....]"), TRUE ~ commissioning_date))
table(WF_Map$commissioning_date$year)
table(WF_Map$year)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/]"), TRUE ~ commissioning_date))
table(WF_Map$year)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/](.)"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/](....)"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/]...."), TRUE ~ commissioning_date))
table(WF_Map$year)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_match(commissioning_date, "[/](....)"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ stri_extract_last_regex(commissioning_date, "\\d{4}"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ stri_extract_all(commissioning_date, "\\d{4}"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_extract_all(commissioning_date, "\\d{4}"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_extract_all(commissioning_date, "{4}"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_extract_all(commissioning_date, "[/]{4}"), TRUE ~ commissioning_date))
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_sub(commissioning_date, end=), TRUE ~ commissioning_date))
length(WF_Map,1,]$commissioning_date)
length(WF_Map[1,]$commissioning_date)
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_sub(commissioning_date, -4), TRUE ~ commissioning_date))
table(WF_Map$year)
runApp()
runApp()
runApp()
runApp()
WF_Map[WF_Map$manufacturer == "NEG Micon",]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(plotly)
runApp()
runApp()
?slice_head
runApp()
runApp()
runApp()
runApp()
plotData <- WF_Map[WF_Map$manufacturer == input$manu,] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
plotData <- WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
plotData
plotData[,1:10]
plotData[1:10,]
runApp()
plotData
plotData[1:10,] %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h')
plotData[1:10,] %>% plot_ly(x = ~n, y = ~project_name, type = 'bar', orientation = 'h')
plotData[1:10,] %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h')
plotData[1:10,] %>% plot_ly(x = ~n, y = ~reorder(project_name, -n), type = 'bar', orientation = 'h')
plotData[1:10,] %>% plot_ly(x = ~n, y = ~reorder(project_name, n), type = 'bar', orientation = 'h')
plotData
plotData <- WF_Map[WF_Map$manufacturer == "Vestas",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
plotData
WF_Map$project_name
WF_Map$project_name2 <- gsub( "'", "", WF_Map$project_name n)
WF_Map$project_name2 <- gsub( "'", "", paste(WF_Map$project_name))
WF_Map[WF_Map$manufacturer="GE",]$project_name2
WF_Map[WF_Map$manufacturer=="GE",]$project_name2
table(WF_Map[WF_Map$manufacturer=="GE",]$project_name2)
table(WF_Map[WF_Map$manufacturer=="GE",]$project_name)
runApp()
plotData <- WF_Map[WF_Map$manufacturer == input$manu,] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
plotData <- WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
plotData
plotData$project_name <- gsub( "'", "", paste(plotData$project_name))
plotData
runApp()
WF_Map <- read.csv("CAN_WindFarm.csv")
# Fix/clean year data
WF_Map <- WF_Map %>% mutate(year = case_when(
str_detect(commissioning_date, "[/....]") ~ str_sub(commissioning_date, -4), TRUE ~ commissioning_date))
WF_Map %>% group_by(project_name) %>% summarise(n=n()) %>% mutate(p2 = string_replace_all(project_name, "[^[:alnum:]]", ""))
WF_Map %>% group_by(project_name) %>% summarise(n=n()) %>% mutate(p2 = gsub("[^[:alnum:]]", "", project_name))
WF_Map %>% group_by(project_name) %>% summarise(n=n()) %>% mutate(p2 = gsub("[^[:alnum:]]", "", project_name)) %>% arrange((desc(n)))
head(WF_Map %>% group_by(project_name) %>% summarise(n=n()) %>% mutate(p2 = gsub("[^[:alnum:]]", "", project_name)) %>% arrange((desc(n))),30)
WF_Map %>% group_by(project_name) %>% summarise(n=n()) %>% mutate(project_name = gsub("[^[:alnum:]]", "", project_name)) %>% arrange((desc(n)))
WF_Map$project_name2 <- gsub("[^[:alnum:]]", "", project_name)
WF_Map$project_name2 <- gsub("[^[:alnum:]]", "", WF_Map$project_name)
WF_Map
WF_Map[WF_Map$manufacturer=="GE"]
WF_Map[WF_Map$manufacturer=="GE",]
WF_Map[WF_Map$manufacturer=="GE",] %>% group_by(project_name2)
WF_Map[WF_Map$manufacturer=="GE",] %>% group_by(project_name2) %>% summarise(n=n())%>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == input$manu,] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
WF_Map$project_name <- gsub("[^[:alnum:]]", "", WF_Map$project_name)
WF_Map[WF_Map$manufacturer == "GE",] %>% group_by(project_name) %>% summarize(n = n()) %>% arrange(desc(n))
runApp()
