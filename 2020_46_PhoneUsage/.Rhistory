runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
ui <- fullPage(
center = TRUE,
opts = list(
sectionsColor = c("#f3f3f3", "#4BBFC3")
),
fullSection(h1("First section"), center = TRUE),
fullSection(
menu = "captureThisSection"
),
fullSection(
fullSlide(h2("Slide 1")),
fullSlideImage(
img = paste0(
"https://raw.githubusercontent.com/alvarotrigo/",
"fullPage.js/master/examples/imgs/bg5.jpg"),
h2("Image background")
)
),
fullSectionImage( # will not show in viewer, open in browser
img = paste0(
"https://raw.githubusercontent.com/alvarotrigo/",
"fullPage.js/master/examples/imgs/bg2.jpg"),
h1("Image background")
)
)
server <- function(input, output){
observeEvent(input$captureThisSectionInput, {
print("Section # 2 loaded")
})
}
shinyApp(ui, server)
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/test')
runApp('C:/Users/mikew/OneDrive/dev/futures/test')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
source('C:/Users/mikew/OneDrive/dev/futures/test2/app.R')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/FuturesCurve')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
runApp('C:/Users/mikew/OneDrive/dev/futures/NavBarTest')
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(plotly)
ikea <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-11-03/ikea.csv')
JD <- "Senior Manager, Ancillary & Revenue Analytics Operations"
CV <- "Mike Wehinger Resume"
if( CV>= JD) {
apply(JD, CV)
status <- "Applied"
} else {
status <- "Keep moving"
}
status <- "Applied"
status
status
status <- "Applied"
status
library(tidyverse)
library(tidyverse)
library(countrycode)
raw_mobile <- read_csv("2020/2020-11-10/mobile-phone-subscriptions-vs-gdp-per-capita.csv")
mobile <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-11-10/mobile.csv')
landline <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-11-10/landline.csv')
setwd("C:\Users\mikew\OneDrive\dev\TidyTuesday\TidyTuesday\wk46 PhoneUsage")
setwd("C:/Users/mikew/OneDrive/dev/TidyTuesday/TidyTuesday/wk46 PhoneUsage")
write.csv(mobile, "mobile.csv", row.names = FALSE)
landline
write.csv(mobile, "landline.csv", row.names = FALSE)
write.csv(landline, "landline.csv", row.names = FALSE)
table(mobile$entity)
allPhones <- landline %>% left_join()
landline$uID <- paste(landline$code, landline$year, sep="_")
landline
mobile$uID <- paste(mobile$code, mobile$year, sep="_")
allPhones <- landline %>% left_join(mobile, by="uID")
allPhones
write.csv(allPhones, "all.csv", row.names = FALSE)
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na()
write.csv(allPhones, "all.csv", row.names = FALSE)
mobile <- mobile %>% replace_na(0)
mobile <- mobile %>% replace_na(list(gdp_per_cap = 0, landline_subs =0)
mobile <- mobile %>% replace_na(list(gdp_per_cap = 0, landline_subs =0))
write.csv(mobile, "mobile.csv", row.names = FALSE)
landline <- landline %>% replace_na(list(gdp_per_cap = 0, landline_subs =0))
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na()
write.csv(allPhones, "all.csv", row.names = FALSE)
write.csv(mobile, "mobile.csv", row.names = FALSE)
landline <- landline %>% replace_na(list(gdp_per_cap = 0, landline_subs =0, total_pop=0))
mobile <- mobile %>% replace_na(list(gdp_per_cap = 0, landline_subs =0, total_pop=0))
landline <- landline %>% replace_na(list(gdp_per_cap = 0, landline_subs =0, total_pop=0))
landline$uID <- paste(landline$code, landline$year, sep="_")
mobile$uID <- paste(mobile$code, mobile$year, sep="_")
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na()
write.csv(allPhones, "all.csv", row.names = FALSE)
mobile
mobile$phoneType <- "mobile"
mobile
landline$phoneType <- "landline"
bind_rows(mobile,landline)
mobile %>% rename(mobile_subs = subs)
mobile %>% rename(subs = mobile_subs)
landline %>% rename(subs = landline_subs)
bind_rows(mobile,landline)
mobile
mobile %>% rename(subs = mobile_subs)
mobile <- mobile %>% rename(subs = mobile_subs)
landline <- landline %>% rename(subs = landline_subs)
landline
bind_rows(mobile,landline)
allPhones <- bind_rows(mobile,landline)
allPhones
glimpse(allPhones)
table(allPhones$phoneType)
allPhones %>% group_by(entity, phoneType) %>% summarize(sumSubs = sum(subs))
temp <- allPhones %>% group_by(entity, phoneType) %>% summarize(sumSubs = sum(subs))
write.csv(temp, "temp.csv", row.names = FALSE)
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na()
allPhones
landline <- landline %>% rename(landline_subs = subs)
mobile <- mobile %>% rename(mobile_subs = subs)
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na()
allPhones
glimpse(allPhones)
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na() %>% select(entity = entity.x, year = year.x, landline = landline_subs, continent = continent.x, mobile = mobile_subs)
allPhones
allPhones$total <- allPhones$landline + allPhones$mobile
allPhones$percentMob <- allPhones$mobile / allPhones$total
allPhones
ggplot(data=allPhones, aes(x=year, y=percentMob)) +
geom_line()
ggplot(data=allPhones, aes(x=year, y=percentMob, group=1)) +
geom_line()
ggplot(data=allPhones, aes(x=year, y=percentMob, group=2)) +
geom_line()
write.csv(allPhones, "temp.csv", row.names = FALSE)
allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na() %>% select(entity = entity.x, year = year.x, landline = landline_subs, continent = continent.x, mobile = mobile_subs)
ContinentPhones <- allPhones %>% group_by(continent, year) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob))
ContinentPhones
ContinentPhones
ggplot(data=ContinentPhones, aes(x=year, y=pod, group=continent)) +
geom_line()
ggplot(data=ContinentPhones, aes(x=year, y=pMod, group=continent)) +
geom_line()
ggplot(data=ContinentPhones, aes(x=year, y=pMod, group=continent)) +
geom_line() + geom_point()
ggplot(data=ContinentPhones, aes(x=year, y=pMod, group=continent)) +
geom_line()
ggplot(data=ContinentPhones, aes(x=year, y=pMod, group=continent, color=continent)) +
geom_line()
ggplot(data=ContinentPhones, aes(x=year, y=pMod, group=continent, color=continent)) +
geom_line(size=1.5)
ggplot(ContinentPhones, aes(fill=pMod, y=year, x=continent)) +
geom_bar(position="stack", stat="identity")
ggplot(ContinentPhones, aes(fill=continent, y=year, x=year)) +
geom_bar(position="stack", stat="identity")
ggplot(ContinentPhones, aes(fill=continent, y=pMod, x=year)) +
geom_bar(position="stack", stat="identity")
ContinentPhones
ContinentPhones2 <- ContinentPhones %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs")
ContinentPhones2
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("All Continents")
table(ContinentPhones2$continent)
ContinentPhones2[ContinentPhones2$continent == "Africa"] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("All Continents")
ContinentPhones2[ContinentPhones2$continent == "Africa",] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Africa")
ContinentPhones2[ContinentPhones2$continent == "Americas"] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Americas")
ContinentPhones2[ContinentPhones2$continent == "Americas",] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Americas")
ContinentPhones2[ContinentPhones2$continent == "Asia"] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Asia")
ContinentPhones2[ContinentPhones2$continent == "Asia",] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Asia")
ContinentPhones2[ContinentPhones2$continent == "Europe",] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Europe")
geom_bar(position="stack", stat="identity") + ggtitle("Oceania")
ContinentPhones2[ContinentPhones2$continent == "Oceania",] %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")+ facet_grid(Continent) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")+ facet_grid(.~Continent) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")+ facet_grid(~Continent) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")+ facet_grid(ContinentPhones2$continent) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity")+ facet_grid(ContinentPhones2$continent) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(y=subs, x=year)) +
geom_bar(stat="identity",aes(fill=pType))+ facet_grid(ContinentPhones2$continent) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(y=subs, x=year)) +
geom_bar(stat="identity",aes(fill=pType)) + ggtitle("Oceania")
ContinentPhones2 %>% ggplot(aes(y=subs, x=year)) +
geom_bar(stat="identity",aes(fill=pType)) + ggtitle("All")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "E") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme(legend.position="none") +
xlab("")
library(viridis)
library(hrbrthemes)
install.packages("hrbrthemes")
library(hrbrthemes)
library(viridis)
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "E") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
?scale_fill_viridis
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "A") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "B") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "C") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
scale_fill_viridis(discrete = T, option = "D") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme_ipsum() +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
theme(legend.position="none") +
xlab("")
ggplot(ContinentPhones2, aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
xlab("")
max(landline$year)
ContinentPhones[ContinentPhones$pMod >.5,] %>% ggplot(aes(x=year, y=pMod, group=continent, color=continent)) + geom_line(size=1.5)
ContinentPhones[ContinentPhones$pMod >=.5,] %>% ggplot(aes(x=year, y=pMod, group=continent, color=continent)) + geom_line(size=1.5)
allPhones
CountryPhones <- allPhones %>% group_by(entity, year) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob))
CountryPhones
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
#library(countrycode)
#library(janitor)
#mobile <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-11-10/mobile.csv')
#landline <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-11-10/landline.csv')
#mobile <- mobile %>% replace_na(list(gdp_per_cap = 0, landline_subs =0, total_pop=0))
#landline <- landline %>% replace_na(list(gdp_per_cap = 0, landline_subs =0, total_pop=0))
#landline$uID <- paste(landline$code, landline$year, sep="_")
#mobile$uID <- paste(mobile$code, mobile$year, sep="_")
###mobile$phoneType <- "mobile"
###landline$phoneType <- "landline"
###landline <- landline %>% rename(subs = landline_subs)
###mobile <- mobile %>% rename(subs = mobile_subs)
###allPhones <- bind_rows(mobile,landline)
#allPhones <- landline %>% left_join(mobile, by="uID") %>% drop_na() %>% select(entity = entity.x, year = year.x, landline = landline_subs, continent = continent.x, mobile = mobile_subs)
#write.csv(allPhones, "allPhones.csv", row.names = FALSE)
allPhones <- readr::read_csv("allPhones.csv")
CountryPhones <- allPhones %>% group_by(entity, year, continent) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob))
CountryPhones <- allPhones %>% group_by(entity, year, continent) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob)) %>% filter(pMod >=.5)
CountryPhones <- allPhones %>% group_by(entity, year, continent) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob)) %>% filter(pMod >=.5)
CountryPhones
CountryPhones <- allPhones %>% group_by(entity, year, continent) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob)) %>% filter(pMod >=.5) %>% filter(year=min(year))
CountryPhones <- allPhones %>% group_by(entity, year, continent) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob)) %>% filter(pMod >=.5) %>% filter(year==min(year))
CountryPhones
CountryPhones <- allPhones %>% group_by(entity, year, continent) %>% summarise(mob = sum(mobile), land = sum(landline)) %>% mutate(pMod = mob/(land + mob)) %>% filter(pMod >=.5)
CountryPhones
CountryPhones %>% group_by(entity, year, continent) %>% filter(year==min(year))
CountryPhones %>% group_by(entity, year, continent) %>% top_n(1,year)
CountryPhones %>% group_by(entity, continent) %>% top_n(1,year)
?top_n
?slice_min
CountryPhones %>% group_by(entity, continent) %>% slice_min(1,year)
CountryPhones %>% group_by(entity, continent) %>% slice_min(year, n=1)
CountryPhones2 <- CountryPhones %>% group_by(entity, continent) %>% slice_min(year, n=1)
CountryPhones2 %>% ggplot(aes(x=entity, y=year, group=entity, color=entity)) + geom_line(size=1.5)+ theme(legend.position = "none") + facet_wrap(~continent)
CountryPhones2 %>% ggplot(aes(x=entity, y=year, group=entity, color=entity)) + geom_line(size=1.5)+ theme(legend.position = "none")
CountryPhones2 %>% ggplot(aes(fill=pType, y=mob, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("All Continents")
CountryPhones2
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") + ggtitle("All Continents")
CountryPhones2 %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
xlab("")
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
xlab("")
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
xlab("")
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents")
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="dodge", stat="identity") +
ggtitle("All Continents")
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") +
ggtitle("All Continents")
CountryPhones2 %>% pivot_longer(cols = c("mob", "land"), names_to = "pType", values_to = "subs") %>% ggplot(aes(fill=pType, y=subs, x=year)) +
geom_bar(position="stack", stat="identity") +
ggtitle("All Continents") +
facet_wrap(~continent) +
xlab("")
install.packages("scatterpie")
library(scatterpie)
CountryPhones2 <- CountryPhones %>% group_by(entity, continent) %>% slice_min(year, n=1)
CountryPhones2
CountryPhones2 %>% ggplot() + geom_scatterpie(aes(x=entity, y=year, r=0.1), data=CountryPhones2, cols=c("mob", "land"))
d <- data.frame(x=rnorm(5), y=rnorm(5))
d$A <- abs(rnorm(5, sd=1))
d$B <- abs(rnorm(5, sd=2))
d$C <- abs(rnorm(5, sd=3))
d
ggplot() + geom_scatterpie(aes(x=x, y=y), data=d, cols=c("A", "B", "C")) + coord_fixed()
CountryPhones2 %>% ggplot() +
geom_subplot2d(aes(x = entity, y = year,
subplot = geom_bar(aes(CountryPhones2, value, fill = mob), stat = "identity")),
width = rel(.5), ref = NULL)
CountryPhones2
CountryPhones2 %>% ggplot() +
geom_subplot2d(aes(x = entity, y = year,
subplot = geom_bar(aes(CountryPhones2, value, fill = mob), stat = "identity")),
width = rel(.5), ref = NULL)
install.packages("ggsubplot")
library(ggsubplot)
install.packages("ggsubplot")
